<%
# choose the theme
theme = 'default'
%>

<head>
	<%=BlackStack::Funnel.ga_head_code%>

	<meta charset="ISO-8859-1">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<title>
		<%=CS_HOME_TITLE%>
	</title>
	<meta name="description" content="">
	<meta name="viewport" content="width=device-width">

	<link rel="icon" href="<%=CS_HOME_FAVICON%>">

	<script src="/core/javascripts/1.3.0/adminflare-demo-init.min.js" type="text/javascript"></script>

	<link href="https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,400,300,600,700" rel="stylesheet" type="text/css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />

	<script type="text/javascript">
		DEMO_CURRENT_THEME = "<%=theme%>";
		// Include Bootstrap stylesheet
		document.write('<link href="/core/css/' + DEMO_ADMINFLARE_VERSION + '/' + DEMO_CURRENT_THEME + '/bootstrap.min.css" media="all" rel="stylesheet" type="text/css" id="bootstrap-css">');
		// Include AdminFlare stylesheet
		document.write('<link href="/core/css/' + DEMO_ADMINFLARE_VERSION + '/' + DEMO_CURRENT_THEME + '/adminflare.min.css" media="all" rel="stylesheet" type="text/css" id="adminflare-css">');
		// Include AdminFlare page stylesheet
		document.write('<link href="/core/css/' + DEMO_ADMINFLARE_VERSION + '/pages.css" media="all" rel="stylesheet" type="text/css">');		// Include Style to Draw Wizards
		// Include Style to Draw Wizards
		document.write('<link href="/core/css/wizard.css" media="all" rel="stylesheet" type="text/css">');
		// Include Style to Draw Plan Tables
		document.write('<link href="/core/css/plantable.css" media="all" rel="stylesheet" type="text/css">');
		// Include Style to Draw Templates
		document.write('<link href="/core/css/templates.css" media="all" rel="stylesheet" type="text/css">');
		// Include Style to Draw Landing Pages
        // document.write('<link href="/core/css/landing.css" media="all" rel="stylesheet" type="text/css">');
		// Include Awesomplete stylesheet
		document.write('<link href="/core/css/awesomplete.css" media="all" rel="stylesheet" type="text/css">');
		// Include FilterJS stylesheet
		document.write('<link href="/core/css/filters.css" media="all" rel="stylesheet" type="text/css">');
		// Include EditablesJS stylesheet
		document.write('<link href="/core/css/editables.css" media="all" rel="stylesheet" type="text/css">');
		// Include NavBar
		document.write('<link href="/core/css/navbar.css" media="all" rel="stylesheet" type="text/css" id="ajax-navbar-css">');
		// Include Dialog
		document.write('<link href="/core/css/dialog.css" media="all" rel="stylesheet" type="text/css" id="ajax-dialog-css">');
		// Include Misc
		document.write('<link href="/core/css/misc.css" media="all" rel="stylesheet" type="text/css" id="ajax-dialog-css">');
		// Include Table
		// document.write('<link href="/core/css/table.css" media="all" rel="stylesheet" type="text/css" id="ajax-dialog-css">');
		// Include Index
		document.write('<link href="/core/css/index.css" media="all" rel="stylesheet" type="text/css" id="ajax-dialog-css">');
        // Include Unibox
		// document.write('<link href="/core/css/unibox.css" media="all" rel="stylesheet" type="text/css" id="ajax-dialog-css">');


		// Include CSS files of extensions
		<%
		# include the CSS files of the extensions
		# reference: https://github.com/leandrosardi/mysaas/issues/33
		BlackStack::Extensions.extensions.each { |e|
			e.css_files.each { |f|
				%>
				document.write('<link href="<%=f.to_s.encode_html%>" media="all" rel="stylesheet" type="text/css">');
				<%
			}
		}
		%>
	</script>

	<script type="text/javascript">

		// behaviour of pages when load
		let hide_loading_message_after_page_load = true;

		//
		const reLinkedInGroup = /^http(s)?:\/\/(www\.)?linkedin\.com\/groups\/(\d+)(\/(profile)?)?$/;
		const reLinkedInGroupUrlCode = /(\d+)/
		function getLinkedInGroupUrlCode(url) {
			if (!reLinkedInGroup.test(url)) {
				return null;
			}
			return url.match(reLinkedInGroupUrlCode)[0];
		}

		// apply tooltips CSS to any element with a title attribue
		function applyToolTips() {
			$('[title]').tooltip({
				'placement': 'bottom',
			});
		}

		// enable select-all-text when focus on any input with class `select-all-on-focus`
		function enableSelectAllTextOnFocus() {
			$('.select-all-on-focus').focus(function () {
				this.select();
			});
		}

		// this function check/uncheck all the rows,
		// then calls methods h['afterCallback'] in order.
		function enableSelectRows(h) {
			// update list of selected rows
			function updateSelectedIDs() {
				a = $(".selected-ids");
				i = 0;
				a.val('');
				$(".select-row:checked").each(function(index) {
					if (i>0) { a.val( a.val() + ',' ); }
					a.val( a.val() + $(this).data('id') );
					i++;
				});
			}

			// initialize selected rows, only if sessionPersistance is on.
			if ( h['sessionPersistance'] == true ) {
				$(".selected-ids").val().split(',').forEach(function(id) {
					$('.select-row[data-id="'+id+'"]').prop( "checked", true );
				})
				// callback function for after you select/unselect rows
				h['afterCallback']();
			}

			// select/unselect all rows.
			$(".select-all-rows").click(function() {
				b = $(this);
				d = $(".select-row");
				if ( b.prop('checked') ) {
					d.prop( "checked", true );
				} else {
					d.prop( "checked", false );
				}
				// update list of selected rows
				updateSelectedIDs();
				// callback function for after you select/unselect rows
				h['afterCallback']();
			});

			// select/unselect one signle row
			$(".select-row").click(function() {
				// update list of selected rows
				updateSelectedIDs();
				// callback function for after you select/unselect rows
				h['afterCallback']();
			});
		}

		//
		function selectRow(id) {
			$('.select-row[data-id="'+id+'"]').prop( "checked", true );
		}

		//
		function newHttpRequest()
		{
			var xmlhttp;
			if (window.XMLHttpRequest)
			{
			 	// code for IE7+, Firefox, Chrome, Opera, Safari
				xmlhttp=new XMLHttpRequest();
			}
			else
			{
			 	// code for IE6, IE5
				xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
			}

			return xmlhttp ;
		}

		//
		function newXmlParser(txt) {
			if (window.DOMParser) {
				parser = new DOMParser();
				xmlDoc = parser.parseFromString(txt, "text/xml");
			} else// Internet Explorer
			{
				xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
				xmlDoc.async = false;
				xmlDoc.loadXML(txt);
			}

			return xmlDoc
		}

		//
		function addEvent(element, eventName, fn) {
			if (element.addEventListener)
				element.addEventListener(eventName, fn, false);
			else if (element.attachEvent)
				element.attachEvent('on' + eventName, fn);
		}

		function showWait(s='') {
			$("#wait").show();
			$("#wait-caption").text(s);
		}

		function hideWait() {
			$("#wait").hide();
		}

		// close any existing alert
		function close_alerts() {
			$('.mysaas-alert').remove();
		}

		function draw_alert(title, background_color='green', border_color='green', success_lines = [], error_lines = [], remove_seconds = -1) {
		    // Create the container div
		    var container = document.createElement('div');
				container.className = 'mysaas-alert'
		    container.style.position = 'fixed';
		    container.style.bottom = '0';
		    container.style.left = '0';
		    container.style.width = '100%';
		    container.style.backgroundColor = background_color;
		    container.style.borderTop = '1px solid ' + border_color;
		    container.style.padding = '15px';
		    container.style.boxSizing = 'border-box';
		    container.style.zIndex = '9999'; // Ensure it's on top
		    container.style.opacity = '0.85'; // Semi-transparent

		    // Create a close button
		    var closeButton = document.createElement('span');
		    closeButton.innerHTML = '&times;';
		    closeButton.style.position = 'absolute';
				closeButton.style.color = 'black'
		    closeButton.style.right = '15px';
		    closeButton.style.top = '15px';
		    closeButton.style.cursor = 'pointer';
		    closeButton.style.fontSize = '20px';
		    closeButton.onclick = function() {
		        document.body.removeChild(container);
		    };
		    container.appendChild(closeButton);

		    // Create the title
		    var titleElement = document.createElement('h3');
		    titleElement.textContent = title;
		    titleElement.style.margin = '0 0 10px 0';
				titleElement.style.color = 'black';
		    container.appendChild(titleElement);

		    // Create the list
		    var list = document.createElement('ul');
		    list.style.listStyle = 'none';
		    list.style.padding = '0';
		    list.style.margin = '0';

		    // For each success_line, create the li element
		    success_lines.forEach(function(line) {
		        var li = document.createElement('li');
		        li.style.marginBottom = '5px';
						li.style.color = 'black';
		        var icon = document.createElement('i');
		        icon.className = 'icon-ok';
		        icon.style.color = 'black';
		        icon.style.marginRight = '5px';
		        li.appendChild(icon);
		        li.appendChild(document.createTextNode(line));
		        list.appendChild(li);
		    });

		    // For each error_line, create the li element
		    error_lines.forEach(function(line) {
		        var li = document.createElement('li');
		        li.style.marginBottom = '5px';
						li.style.color = 'black';
		        var icon = document.createElement('i');
		        icon.className = 'icon-remove';
		        icon.style.color = 'black';
		        icon.style.marginRight = '5px';
		        li.appendChild(icon);
		        li.appendChild(document.createTextNode(line));
		        list.appendChild(li);
		    });

		    container.appendChild(list);

		    // Append the container to the body
		    document.body.appendChild(container);

				$(document).keyup(function(e) {
					if (e.keyCode == 27) { // esca[e]
						container.remove();
					}
				});

				// If remove_seconds is not -1, set a timeout to hide the alert
		    if (remove_seconds !== -1) {
		        setTimeout(function() {
		            container.remove();
		        }, remove_seconds * 1000);
		    }
		}

		function draw_success_alert(title, success_lines = [], error_lines = [], remove_seconds = -1) {
			draw_alert(title, 'rgb(160,255,160)', 'green', success_lines, error_lines, remove_seconds);
		}

		function draw_error_alert(title, success_lines = [], error_lines = [], remove_seconds = -1) {
			draw_alert(title, 'rgb(255,160,190)', 'red', success_lines, error_lines, remove_seconds);
		}

		function draw_info_alert(title, success_lines = [], error_lines = [], remove_seconds = -1) {
			draw_alert(title, 'rgb(160,210,255)', 'blue', success_lines, error_lines, remove_seconds);
		}

		function semiTransparentLinks() {
			// make all the .semi-transparent-link semi-transparent
			$('.semi-transparent-link').css('opacity', '0.5');
			// a .semi-transparent-link link gets opaciity when the mouse pointer is over
			$('.semi-transparent-link').hover(function() {
				$(this).css('opacity', '1');
			}
			, function() {
				$(this).css('opacity', '0.5');
			});
		}

		function formatLinks() {
			// remove text decoration from all links
			$('a').css('text-decoration', 'none');
			// remove text decoration from all buttons with class .btn-link
			$('.btn-link').css('text-decoration', 'none');
		}
	</script>

	<script src="/core/javascripts/1.3.0/modernizr-jquery.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/1.3.0/bootstrap.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/contenteditable.js" type="text/javascript"></script>
	<script src="/core/javascripts/data.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/selectrows.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/filters.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/editables.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/images.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/tags.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/profiles.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/purify.min.js" type="text/javascript"></script>
	<%# <script src="/core/javascripts/layout.js" type="text/javascript"></script> %>
	<%# <script src="/core/javascripts/table.js" type="text/javascript"></script> %>
	<%# <script src="/core/javascripts/unibox.js" type="text/javascript"></script> %>
	<script src="/core/javascripts/misc.js" type="text/javascript"></script>
	<script src="/core/javascripts/templates.js" type="text/javascript"></script>
	<%# <script src="/core/javascripts/unibox.layout.js" type="text/javascript"></script> %>

	<%
	# if the constant TINYMCE_API_KEY is defined
	# then include the TinyMCE script
	if defined?(TINYMCE_API_KEY)
	%>
	<script src="https://cdn.tiny.cloud/1/<%=TINYMCE_API_KEY%>/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
	<%
	end # if defined?(TINYMCE_API_KEY)
	%>

	<script src="/core/javascripts/awesomplete.min.js" type="text/javascript"></script>
	<script src="/core/javascripts/1.3.0/adminflare.min.js" type="text/javascript"></script>
	<!-- TODO: Getting javascript error when enable this line.
	<script src="/landing/javascripts/ajax_status-1.0.1.min.js" type="text/javascript"></script>
	-->
	<!-- Include JS files of extensions -->
	<%
	# include the CSS files of the extensions
	# reference: https://github.com/leandrosardi/mysaas/issues/33
	BlackStack::Extensions.extensions.each { |e|
		e.js_files.each { |f|
			%>
			<%="<script src='#{f.to_s.encode_html}' type='text/javascript'></script>"%>
			<%
		}
	}
	%>

	<script type="text/javascript">
		// clickeable rows
		function on_click_tr_clickeable(o) {
			var id = $(o).data("id");
			// if the row is not selected, then add the class selected
			if ($(o).hasClass("selected") == false) {
				$(o).addClass("selected");
			}
			// remove the class selected from all the other rows tr.clickeable.
			$("tr.clickeable").each(function() {
				if ($(this).data("id") != id) {
					$(this).removeClass("selected");
				}
			});
		}

		// images carousel functions
		function update_numbers() {
			img = $('#screenshot_modal_img');
			var number = parseInt($(img).attr('data-number'));
			var total = $(".screenshot").length;
			$('#number').html(number+1);
			$('#total').html(total);
		}

		function next_screenshot() {
			img = $('#screenshot_modal_img');
			var number = parseInt($(img).attr('data-number'));
			var next_number = number + 1;
			var total = $(".screenshot").length;
			if (next_number >= total) {
			next_number = 0;
			}
			// get the src of the next image
			let q = '#screenshot-'+next_number.toString();
			let src = $(q).attr('src');
			$(img).attr('src', src);
			$(img).attr('data-number', next_number);
			// update the number
			update_numbers();
		}

		function prev_screenshot() {
			img = $('#screenshot_modal_img');
			var number = parseInt($(img).attr('data-number'));
			var prev_number = number - 1;
			var total = $(".screenshot").length;
			if (prev_number < 0) {
			prev_number = total - 1;
			}
			// get the src of the next image
			let q = '#screenshot-'+prev_number.toString();
			let src = $(q).attr('src');
			$(img).attr('src', src);
			$(img).attr('data-number', prev_number);
			// update the number
			update_numbers();
		}


		// on click on .close, hide the screenshot modal
		$("#screenshot_modal .close").click(function() {
			$("#screenshot_modal").hide();
		});

		// on press escape, hide the screenshot modal
		$(document).keyup(function(e) {
			if (e.keyCode == 27) {
			$("#screenshot_modal").hide();
			}
		});

		// on click on the image, go to the next image
		$("#screenshot_modal_img").click(function() {
			next_screenshot();
		});

		// on click on the next button, go to the next image
		$("#screenshot_modal .next").click(function() {
			next_screenshot();
		});

		// on press the right arrow, go to the next image
		$(document).keyup(function(e) {
			if (e.keyCode == 39) {
			next_screenshot();
			}
		});

		// on click on the prev button, go to the prev image
		$("#screenshot_modal .prev").click(function() {
			prev_screenshot();
		});

		// on press the left arrow, go to the prev image
		$(document).keyup(function(e) {
			if (e.keyCode == 37) {
				prev_screenshot();
			}
		});


		// Make a POST request to and ajax end-point.
		function callx(h) {
      let url = h.url;
      let params = h.params;
      let on_error = h.on_error;
      let on_success = h.on_success;
      let alerts_delay = h.alerts_delay;

      if (alerts_delay == null) alerts_delay = -1;

	  	fetch(url, {
        method: 'POST',                      	// HTTP method
        headers: {
          'Content-Type': 'application/json' 	// Specify JSON content
        },
        body: JSON.stringify(params)           	// Convert data to JSON string
      })
      .then(response => {
        if (!response.ok) {
          // Handle HTTP errors
          draw_error_alert("Operation Error", [], [`Network response from ${url} was not ok: ${response.statusText}`], alerts_delay);
        }
        return response.json(); // Parse the JSON response
      })
      .then(data => {
        s = JSON.stringify(data, null, 2);
        if (data.status == 'success') {
          // Handle application-level errors
          if (on_success != null) {
            on_success(data);
          } else {
            draw_success_alert("Operation Success", [], [`End-point ${url} returned successfully.`], alerts_delay);
          }
        } else {
          if (on_error != null) {
              on_error(data);
          } else {
            draw_error_alert("Operation Error", [], [`End-point ${url} returned an error: ${s}`], alerts_delay);
          }
        }
      })
      .catch(error => {
				console.error('Fetch operation failed:', error); // Log detailed error for debugging
        let errorMessage = 'An unexpected error occurred. Please try again later.';

        // Check if the error has a status and body
        if (error.status && error.body) {
            // If the response body is an object, stringify it for readability
						try {
							const responseBody = typeof error.body === 'object' ? JSON.stringify(error.body) : error.body;
	            errorMessage = `Error ${error.status}: ${responseBody}`;
						} catch (e) {
						  errorMessage = 'Could not parse error.body';
						}
        } else if (error.message) {
            // Fallback to the error message
            errorMessage = `Error: ${error.message}`;
				}
				hideWait();
        draw_error_alert("Operation Error", [], [`Fetch error on end-point ${url}: ${errorMessage}`], alerts_delay);
      });
    }

		// draw pagination function
		//
		function drawPagination(o, current_page, total_pages, on_click_function) //, page_size=10)
		{
			o.html("");
			u = $("<ul></ul>");
			o.append(u);
			/*
			if (current_page>1) {
				li = $('<li><a href="#">Prev</a></li>');
			} else {
				li = $('<li class="disabled"><a href="#">Prev</a></li>')
			}
			u.append(li);
			*/

			i=1
			i_prev = 1
			while (i<=total_pages) {
				if (i==current_page) {
					sClassActive="class='active'"
					onClick=null
				} else {
					sClassActive=""
					onClick=on_click_function
				}
				if ( i==1 || i==total_pages || (i>=current_page-2 && i<=current_page+2) ) {
					if (i>i_prev+1) {
						li = $('<li><span>...</span></li>')
						u.append(li)
					}
					li = $('<li '+sClassActive+'><a href="#" data-i="'+i+'">'+i.toString()+'</a></li>');
					//if (onClick != null) {
						$(li).find('a')[0].addEventListener('click', function(event) {
							var p = $(this).data('i');
							on_click_function(p);
						});
					//}
					u.append(li)
					i_prev=i
				}
				i=i+1
			}

			/*
			if (current_page<total_pages) {
				i = $('<li><a href="./'+url+(current_page+1).toString()+'">Next</a></li>');
			} else {
				i = $('<li class="disabled"><a href="#">Next</a></li>')
			}
			u.append(i);
			*/

		}

	// get element scroll position y
	function get_scroll_y(e){
		return $(e).scrollTop();
	}

	// set element scroll position y
	function set_scroll_y(e, p){
	    $(e).scrollTop(p)
	}
	</script>

</head>
