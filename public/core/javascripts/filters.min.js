filtersJs = {
    // events when the user add or remove a value
    events: {},

    version: "1.0.0",

    addPositiveKeyword: function(parent) {
        //addPositiveKeyword
        filtersJs.addKeyword(parent, true);
    },

    addNegativeKeywords: function(parent) { 
        //addNegativeKeyword
        filtersJs.addKeyword(parent, false);
    },

    getPositiveValues: function(parent) {
        var arr = [];
        $(parent).find(".label-info").each(function(index, elem) {
            arr.push($(this).text());
        });
        return arr;
    },

    getNegativeValues: function(parent) {
        var arr = [];
        $(parent).find(".label-important").each(function(index, elem) {
            arr.push($(this).text());
        });
        return arr;
    },

    removeValue: function(parent, value) {
        $(parent).find('span').filter(function() {
            return $.trim($(this).text()) == value;
        }).remove();
    },

    removeKeyword: function(parent, value) {
        filtersJs.removeValue(parent, value);

        // if exists a function for this parent, for when a value is removed
        if (filtersJs.events[parent.id+".on_remove_value"]) {
            // call the function
            filtersJs.events[parent.id+".on_remove_value"](value);
        }
    },
  
    validateValue: function(parent) {
        let value = $(parent).find('#keyword').val(); //.toLowerCase();

        if (filtersJs.findValue(parent, value)) {

            $(parent).find('#btnKeywordI').prop('disabled', false);
            $(parent).find('#btnKeywordE').prop('disabled', false);
            return true;
        } else {
            $(parent).find('#btnKeywordI').prop('disabled', true);
            $(parent).find('#btnKeywordE').prop('disabled', true);
            return false;
        }
    },

    findValue: function(parent, value) {
        // if the parent has a datalist, and there are option elements inside the datalist, then the value must exists in the datalist
        if ($(parent).find("#"+parent.id+"_list").length > 0) {
            if ($(parent).find("#"+parent.id+"_list").children().length > 0) {
                if ($(parent).find("#"+parent.id+"_list").find("option[value='" + value + "']").length > 0) {
                    return true;
                } else {
                    return false;
                }
            } else {
                return true;
            }
        } else {
            return true;
        }
    },

    // add tags with true/false--positive/negative, with a param-specified value
    addValue: function(parent, value, isPositive) {
        // if the value is empty, do not add it
        if (value.trim().length == 0) {
            return;
        }
        // if the parent has a datalist, and there are option elements inside the datalist, then the value must exists in the datalist
        if ( filtersJs.findValue(parent, value) == false ) {
            return;            
        }

        // draw the added value (tag)
        if (isPositive == true) {
            sClass = "label-info"
        } else {
            sClass = "label-important"
        }
        div = $(parent).find("#keywords").get(0);
        s = '<span class="label ' + sClass + '" valign="middle" value="' + value + '">' +
            "<a href='javascript:void(0)' onclick='filtersJs.removeKeyword(document.getElementById(\""+parent.id+"\"), \""+value+"\");' class='close' data-dismiss='alert'> <i class='icon-remove-sign'></i></a> " + value + " " +
            "</span> "
        div.innerHTML = div.innerHTML + s
    },

    // add tags with true/false--positive/negative
    addKeyword: function(parent, isPositive) {
        let input = $(parent).find("#keyword").get(0);
        filtersJs.addValue(parent, input.value, isPositive);

        // if exists a function for this parent, for when a value is added
        if (filtersJs.events[parent.id+".on_add_value"]) {
            // call the function
            filtersJs.events[parent.id+".on_add_value"](input.value);
        }

        // clear the input
        input.value = ""
        $(parent).find('#btnKeywordI').attr('disabled', true);
        $(parent).find('#btnKeywordE').attr('disabled', true);

        // set focus on the input box, to add another keyword
        input.focus();
    },

    draw: function(parent, h) {
        // draw the widget into the parent element
        var s =
            "<div class='control-group row-fluid'>" +
            "	<label class='control-label' for='inputKeywords'>"+h['label']+"</label>" +
            "	<div class='controls'>" +
            "		<div class='row-fluid'>" +
            "			<div class='span8'>" +
            "				<input onchange='' type='text' class='input-block-level' name='keyword' id='keyword' list='"+parent.id+"_list' placeholder='Write "+h['label']+" here' tabindex='2' />" +
            "				<datalist id='"+parent.id+"_list'>" +
            "				</datalist>" +
            //"				<p >Press ENTER to add the keyword. Or use the include/exclude buttons.</p>" +
            "			</div>" +
            "			<div class='span4'>" +
            "				<button id='btnKeywordI' class='include-button btn btn-mini btn-blue' type='button' disabled><i class='icon-plus' tabindex='-1'></i> Include</button>" +
            "				<button id='btnKeywordE' class='exclude-button btn btn-mini btn-red' type='button'  disabled><i class='icon-minus' tabindex='-1'></i> Exclude</button>" +
            "			</div>" +
            "		</div>" +

            "		<div id='keywords' name='keywords'></div>" +
            "	</div>" +
            "</div>";
        $(parent).html(s);

        // hide the button to add positive value
        if (h['allowed_positive_keywords'] != null) {
            if (h['allowed_positive_keywords'] == false) {
                $(parent).find('#btnKeywordI').hide();
            }
        }

        // hide the button to remove negative value
        if (h['allowed_negative_keywords'] != null) {
            if (h['allowed_negative_keywords'] == false) {
                $(parent).find('#btnKeywordE').hide();
            }
        }

        // store function to trigger when the user adds a value
        if (h['on_add_value'] != null) {
            filtersJs.events[parent.id+".on_add_value"] = h['on_add_value'];
        }

        // store function to trigger when the user removes a value
        if (h['on_remove_value'] != null) {
            filtersJs.events[parent.id+".on_remove_value"] = h['on_remove_value'];
        }

        // draw list of allowed values
        if (h['allowed_values'] == null) {
            //console.log("please add allowed_values")
        } else {
            $.each(h['allowed_values'], function(index, value) {
                $(parent).find("#"+parent.id+"_list").append('<option value="' + value + '">' + value + '</option>')
            });
        }

        // add event handler
        $(parent).find('#keyword').on('input', function() {

            if (h['allowed_values'] == null) {
                var i = $.trim($(this).val()).length;
                if (i > 0) {
                    $(parent).find('#btnKeywordI').prop('disabled', false);
                    $(parent).find('#btnKeywordE').prop('disabled', false);
                } else {
                    $(parent).find('#btnKeywordI').prop('disabled', true);
                    $(parent).find('#btnKeywordE').prop('disabled', true);
                }

            } else
                filtersJs.validateValue(parent);
        });

        // add event handler
        // event: on click ENTER button
        $(parent).find('#keyword').keydown(function(e) {
            if (e.which == 13) { // ENTER
                filtersJs.addKeyword(parent, true);
            }
        });

        // add event handler
        // include button add tag
        $(parent).find('.include-button').click(function() {
            filtersJs.addKeyword(parent, true);
        });

        // add event handler
        // exclude button add tag
        $(parent).find('.exclude-button').click(function() {
            filtersJs.addKeyword(parent, false);
        });
    },
};