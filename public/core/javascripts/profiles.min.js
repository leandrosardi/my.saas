profilesJs = {
    // close the drop-down menu
    collapse: function(parent) {
        let id_lead = parent.data('id');
        let o = document.querySelector("div.btn-group[data-id='"+id_lead+"']");
        $(o).removeClass('open');
    },

    // increase the number of profiles with checked='true' in the profile button
    // with data-id='id_lead'. Update the color of the badge.
    set_text: function(parent, s) {
        let id_lead = parent.data('id');
        // get the span.caption inside the button.btn-profile-lists with data-id='id_lead'
        // get the value of the span
        // update the text into the span, with the number of profiles with checked='true'
        let span = $('button.btn-profile-lists[data-id="'+id_lead+'"] span.caption');
        span.html(s);
    },

    // change the opacity of a profile
    set_profile_opacity: function(parent, id_profile, x) {
        let id_lead = parent.data('id');
        let li = document.querySelector('li[data-id="'+id_lead+'"][data-id-profile-list="'+id_profile+'"]');
        li.style.opacity = x
    },

    // remove an li element from the ul with data-id='id_lead' and data-id-profile-list='id_profile'
    remove_profile: function(parent, id_profile) {
        let id_lead = parent.data('id');
        // find the il with this data-id='id_lead' and data-id-profile='id_profile'
        let li = document.querySelector('li[data-id="'+id_lead+'"][data-id-profile-list="'+id_profile+'"]');
        // delete the element
        li.remove();
    },

    createElementFromHTML: function(htmlString) {
        // Sanitize the HTML string to prevent XSS
        const sanitizedHtml = DOMPurify.sanitize(htmlString);

        // Create a Range object
        const range = document.createRange();

        // Parse the sanitized HTML string into a DocumentFragment
        const documentFragment = range.createContextualFragment(sanitizedHtml);

        return documentFragment;
    },

    // receive a hash descriptor of the profile related with the lead { id:, name:, checked: }
    add_profile: function(parent, h) {
        let id_lead = parent.data('id');
        //
        let div = document.querySelector('div.div-profiles[data-id="'+id_lead+'"]');
        // remove '<i>' element with innert text 'No profile lists found' from the div content
        $('i:contains("No profile lists found")').remove();
        // create the li element, with hand cursor
        let li = document.createElement('li');
        li.setAttribute('data-id-profile-list', h.id);
        li.setAttribute('data-id', id_lead);
        li.setAttribute('data-name', h.name);
        li.style.cursor = 'pointer';
        // create the profile element
        profileHtml = `<span style='margin-left:5px;margin-bottom:5px;'><img width='32px' height'32px' style='margin:5px;border-radius: 50%;' src='${h.src}'></i>${h.name}</span>`;
        profile = profilesJs.createElementFromHTML(profileHtml);
        li.append(profile);

        // if the profile is deleted, then add a "deleted" label
        if (h.deleted === true) {
            li.appendChild(document.createTextNode(' (deleted)'));
        }
        // add the li to the ul
        $(div).append(li);
        // on click on the li, call ajax to add/remove the lead from/to the profile list
        li.addEventListener('click', function(e) {
            // any case, raise the on_click_profile event
            if (h['on_click_profile']) {
                h['on_click_profile']();
            }

            // JavaScript, stop additional event listeners
            // reference: https://www.w3schools.com/jsref/event_stopimmediatepropagation.asp
            e.stopImmediatePropagation();
        });
    },

    draw: function(parent, h) {
        let id_lead = parent.data('id');

        text = 'profiles';
        if (h['text']) text = h['text'];

        let profilesHtml = `
            <div class="profiles" data-id="${id_lead}">
                <div class="buttons">
                    <div class="btn-group" data-id="${id_lead}">
                        <button class="btn btn-link dropdown-toggle btn-profile-lists" data-id="${id_lead}" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="caption badge badge-blue">${text}</span>
                        </button>
                        <ul class="dropdown-menu ul-profiles" data-id="${id_lead}">
                            <li class="div-profile-lists" data-id="${id_lead}">
                                <div class="div-profiles" data-id="${id_lead}">
                                    <!-- profiles added by JavaScript are placed here -->
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        `;
        parent.append(profilesHtml);

        // store function to trigger when the user open the list
        if (h['on_expand'] != null) {
            let o = $('button.btn-profile-lists[data-id="'+id_lead+'"]');
            o.on('click', h['on_expand']);
        }

        // en endit any textfield inside a ul,
        // enable/disable the add button depending on the value of the textfield
        // by calling function profilesJs.enable_add_button(parent)
        $('ul[data-id="'+id_lead+'"].ul-profiles').on('keyup', 'input.input-profiles', function() {
            profilesJs.enable_add_button($(this).closest('ul'));
        });

        // when click on .btn-profile-lists, set focus on input
        $('button[data-id="'+id_lead+'"].btn-profile-lists').click(function(e) {
            let id_lead = $(this).data('id');
            let input = document.querySelector('input[data-id="'+id_lead+'"].input-profiles');
            setTimeout(() => {
                $(input).focus();
            }, 0); // Add a minimal delay
        });


        // avoid to close the ul when click on the input box
        $('input[data-id="'+id_lead+'"].input-profiles').click(function(e) {
            // JavaScript, stop additional event listeners
            // reference: https://www.w3schools.com/jsref/event_stopimmediatepropagation.asp
            e.stopImmediatePropagation();
        });

        // call add profile event
        $('button.btn-create-profile-list[data-id="'+id_lead+'"]').click(function(e) {
            let s = $('input[data-id="'+id_lead+'"].input-profiles').val();

            // store function to trigger when the user adds profile
            if (h['on_create_profile'] != null) {
                h['on_create_profile'](s);
            } else {
                profilesJs.add_profile(parent, {
                    id: s,
                    name: s,
                    color: 'gray',
                    checked: false
                });
                // stop the event scalation
                e.stopImmediatePropagation();
            }

            // clear content of the input.
            $('input[data-id="'+id_lead+'"].input-profiles').val('');
        });

        // better user experience: when press ENTER on any .input-profiles, for click on the add button with same data-id.
        $('input[data-id="'+id_lead+'"].input-profiles').keypress(function(e) {
            if (e.which == 13) {
                // find button .btn-create-profile-list with same data-id value
                let id_lead = $(this).attr('data-id');
                let button = $('button.btn-create-profile-list[data-id="'+id_lead+'"]');
                // if button is enabled
                if ( button.prop('disabled') == false ) {
                    // click the button
                    button.click();
                }
            }
        });

    },
};
